#include <stdio.h>
#define N 10000

int partition (int a[], int l, int h)
{
    int pivot = a[h];
    
    int i = l-1; /***** i always points to the last element on the left hand side that is smaller than the pivot 
                        KEEP IN MIND i POINTS to index just before the lower bound****/
    int temp;
    
    for (int j=l; j<=h-1; j++)
    {
        if (a[j] <= pivot)
        {
            i = i+1;
            temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            
        }
    }
    temp = a[i+1];
    a[i+1] = pivot;
    a[h] = temp;
    
    return i+1;    
}
    

void quickSort(int arr[],int l, int h )
{
    if (l < h)
    {
    int t = partition(arr, l, h);
    quickSort(arr,l,t-1);
    quickSort(arr,t+1,h);
    }
    
}



int main ()
{
    
    int n,arr[N];
    
    scanf ("%d",&n);
    
    for (int i=0; i<n; i++)
    {
         scanf ("%d",&arr[i]);
    }
    
    quickSort (arr, 0, n-1);
    
    for (int i=0; i<n; i++)
    {
         printf ("%d\t",arr[i]);
    }
    
    
 return 0;
 
}
