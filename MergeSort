#include <stdio.h>
#define N 100000

void merge (int arr[], int l, int m, int h)
{
    int n1 = m-l+1;
      printf("I am n1-%d",n1);
    int n2 = h-m;
    printf("I am n2-%d",n2);
    
    int L[n1], R[n2];
    

    for (int i=0; i<n1; i++)
    {
        L[i] = arr[l+i];
    }
    
    for (int i=0; i<n2; i++)
    {
        R[i] = arr[m+1+i];
        
    }

    int i,j = 0;
       
    int k = l;
    printf("k=%d\n",k);
    
    while (i < n1 && j<n2)
    {
        if (L[i] <= R[j])
        {
            arr[k] = L[i++];
            
        }
        else
        {
            arr[k] = R[j++];
            
        }  
        k++;    
    }
    
    while (i<n1)
        arr[k++]=L[i++];
    
    while (j<n2)
        arr[k++]=R[j++];
        
}  

void mergeSort (int arr[], int low, int high)
{
    int mid = 0;
    
    if(low < high)
    {
        mid = (high+low)/2;
    
        mergeSort (arr, low, mid);
        mergeSort (arr, mid+1, high);
        merge (arr, low, mid, high);
    }
return;
}


int main ()
{
    
    int n,arr[N];
    
    scanf ("%d",&n);
    
    for (int i=0; i<n; i++)
    {
         scanf ("%d",&arr[i]);
    }
    
    mergeSort (arr, 0, n-1);
    
    for (int i=0; i<n; i++)
    {
         printf ("%d\t",arr[i]);
    }
    
    
 return 0;
 
}
